@using Microsoft.AspNetCore.Components.Web
@using Microsoft.EntityFrameworkCore
@page "/cardata" 
@inject CarDbContext DbContext

<PageTitle>Car Data</PageTitle>

<style>
    body {
        background-color: #f1f1f1;
    }
</style>

<h1>Car Data</h1>
<hr>

<table class="table">
    <thead>
        <tr>
            <th>Brand</th>
            <th>Model</th>
            <th>Year</th>
            <th>Mileage</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var car in cars)
        {
            <tr>
                <td>@car.Brand</td>
                <td>@car.Model</td>
                <td>@car.Year</td>
                <td>@car.Mileage km</td>
            </tr>
        }
    </tbody>
</table>

<h4>Add New Car</h4>

<EditForm Model="newCar" OnValidSubmit="AddCar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Brand:</label>
        <InputText @bind-Value="newCar.Brand" placeholder="Brand" />
    </div>
    <div>
        <label>Model:</label>
        <InputText @bind-Value="newCar.Model" placeholder="Model" />
    </div>
    <div>
        <label>Year:</label>
        <InputNumber @bind-Value="newCar.Year" placeholder="Year" />
    </div>
    <div>
        <label>Mileage:</label>
        <InputNumber @bind-Value="newCar.Mileage" placeholder="Mileage" />
    </div>

    <button type="submit">Add Car</button>
</EditForm>

@code {
    private List<Car> cars = new();
    private Car newCar = new();

    protected override async Task OnInitializedAsync()
    {
        cars = await DbContext.Cars.ToListAsync();
    }

    private async Task AddCar()
    {
        if (!string.IsNullOrEmpty(newCar.Brand) && !string.IsNullOrEmpty(newCar.Model))
        {
            DbContext.Cars.Add(newCar);
            await DbContext.SaveChangesAsync();

            cars = await DbContext.Cars.ToListAsync();
            newCar = new();
        }
    }
}
